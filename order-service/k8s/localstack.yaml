apiVersion: v1
kind: Service
metadata:
  labels:
    app: localstack
  name: localstack
spec:
  ports:
    - name: "4566"
      port: 4566
      targetPort: 4566
    - name: "4571"
      port: 4571
      targetPort: 4571
  type: LoadBalancer
  selector:
    app: localstack
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: localstack
spec:
  replicas: 1
  selector:
    matchLabels:
      app: localstack
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: localstack
    spec:
      containers:
        - env:
            - name: SERVICES
              value: "kinesis,DynamoDB,CloudWatch"
            - name: AWS_CBOR_DISABLE
              value: "true"
            - name: aws.cborEnabled
              value: "false"
          image: localstack/localstack
          name: localstack
          ports:
            - containerPort: 4566
            - containerPort: 4571
          resources: {}
          volumeMounts:
            - mountPath: /tmp/localstack
              name: localstack-claim0
            - mountPath: /var/run/docker.sock
              name: localstack-claim1
      restartPolicy: Always
      volumes:
        - name: localstack-claim0
          persistentVolumeClaim:
            claimName: localstack-claim0
        - name: localstack-claim1
          persistentVolumeClaim:
            claimName: localstack-claim1
status: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    app: localstack-claim1
  name: localstack-claim1
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    app: localstack-claim0
  name: localstack-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

